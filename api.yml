#Test with: http://editor.swagger.io/

swagger: '2.0'
info:
  version: 1.0.0
  title: Equipos Microservice for Picaditos
  description: Python + MongoDB
  license:
    name: Software Architecture 2018-II
host: 192.168.99.102:4002
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /equipos:
    post:
      summary: Creates a new equipo
      operationId: createequipo
      parameters:
        - name: equipo
          in: body
          required: true
          description: equipo Object
          schema:
            $ref: '#/definitions/equipoInput'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Singleequipo'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/GenericError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/GenericError'
    get:
      summary: Returns all equipos
      operationId: getAllequipos
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/equiposList'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/GenericError'

  /equipos/{id}:
    get:
      summary: Returns a equipo with the given id
      operationId: getequipobyId
      parameters:
        - name: id
          in: path
          description: The id of the equipo to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Singleequipo'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/GenericError'
        '400':
            description: Bad Request
            schema:
              $ref: '#/definitions/GenericError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/GenericError'

    put:
      summary: Updates a equipo with the given id
      operationId: updateequipo
      parameters:
        - name: id
          in: path
          description: The id of the equipo to be updated
          required: true
          type: integer
        
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Singleequipo'  
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/GenericError'
        '400':
            description: Bad Request
            schema:
              $ref: '#/definitions/GenericError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/GenericError'

    delete:
      summary: Deletes a equipo with the given id
      operationId: deleteequipo
      parameters:
        - name: id
          in: path
          description: The id of the equipo to be deleted
          required: true
          type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/GenericError'
        '400':
            description: Bad Request
            schema:
              $ref: '#/definitions/GenericError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/GenericError'
  
  
definitions:

  equipo:
    type: object
    properties:
      id:
        type: integer
      nombre:
        type: string
      calificacion:
        type: integer
      deporte:
        type: string
      captain_un:
        type: string
      miembros:
        type: array
        items:
          type: string
          
  equipoInput:
    type: object
    properties:
      nombre:
        type: string
      calificacion:
        type: integer
      deporte:
        type: string
      captain_un:
        type: string
      miembros:
        type: array
        items:
          type: string
  equiposList:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/equipo'
          
  Singleequipo:
    type: object
    properties:
      data:
        $ref: '#/definitions/equipo'

# Errors
  GenericError:
    type: object
    properties:
      error:
        type: object
        properties:
          detail:
            type: string
            
  FieldError:
    type: object
    properties:
      error:
        type: object
        properties:
          field:
            type: array
            items:
              type: string